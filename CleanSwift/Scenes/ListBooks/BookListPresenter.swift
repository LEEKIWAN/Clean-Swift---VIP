//
//  BookListPresenter.swift
//  CleanSwift
//
//  Created by 이기완 on 2020/06/29.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol BookListPresentationLogic {
    func presentBookList(response: BookList.FetchBooks.Response)
}

class BookListPresenter: BookListPresentationLogic {
    weak var viewController: BookListDisplayLogic?
    
    // MARK: Do something
    
    func presentBookList(response: BookList.FetchBooks.Response) {
//        let viewModel = BookList.FetchBooks.ViewModel(disPlayedBooks: response.bo)
//        viewController?.displaySomething(viewModel: viewModel)
        
        var displayedBooks: [BookList.FetchBooks.ViewModel.Book] = []
        
        for book in response.books.list {
            displayedBooks.append(book)
        }
        
        let viewModel = BookList.FetchBooks.ViewModel(displayedBooks: displayedBooks)
        viewController?.displayBookLists(viewModel: viewModel)
        
//        var displayedOrders: [ListOrders.FetchOrders.ViewModel.DisplayedOrder] = []
//        for order in response.orders {
//            let date = dateFormatter.string(from: order.date)
//            let total = currencyFormatter.string(from: order.total)
//            let displayedOrder = ListOrders.FetchOrders.ViewModel.DisplayedOrder(id: order.id!, date: date, email: order.email, name: "\(order.firstName) \(order.lastName)", total: total!)
//            displayedOrders.append(displayedOrder)
//        }
//        let viewModel = ListOrders.FetchOrders.ViewModel(displayedOrders: displayedOrders)
//        viewController?.displayFetchedOrders(viewModel: viewModel)
        
    }
}
