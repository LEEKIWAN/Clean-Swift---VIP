//
//  BookListInteractor.swift
//  CleanSwift
//
//  Created by 이기완 on 2020/06/29.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Alamofire

protocol BookListBusinessLogic {
    func requestBookList(request: BookList.FetchBooks.Request)
}

protocol BookListDataStore {
    var books: BookList.FetchBooks.ViewModel.Books? { get }
}

class BookListInteractor: BookListBusinessLogic, BookListDataStore {
    
    var books: BookList.FetchBooks.ViewModel.Books?
    
    var presenter: BookListPresentationLogic?
//    var worker: BookListWorker?
    //var name: String = ""
    
    // MARK: Do something
    
    func requestBookList(request: BookList.FetchBooks.Request) {
//        worker = BookListWorker()
//        worker?.doSomeWork()
        
        request.bookList { [weak self] (response) in
            guard let self = self else { return }
            switch response.result {
            case .success(let books):
                self.books = books
                debugPrint(response)
                let response = BookList.FetchBooks.Response(books: books)
                self.presenter?.presentBookList(response: response)
                
            case .failure(let error):
                print(error)
            }
        }
        
        
    }
}
