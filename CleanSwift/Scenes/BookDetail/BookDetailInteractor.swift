//
//  BookDetailInteractor.swift
//  CleanSwift
//
//  Created by kiwan on 2020/07/01.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol BookDetailBusinessLogic {
    func requestBookDetail(request: BookDetail.FetchBook.Request)
}

protocol BookDetailDataStore {
    var book: Book? { get set }
}

class BookDetailInteractor: BookDetailBusinessLogic, BookDetailDataStore {
    var book: Book?
    
    var presenter: BookDetailPresentationLogic?
    var worker: BookDetailWorker?

    // MARK: Do something
    
    func requestBookDetail(request: BookDetail.FetchBook.Request) {
        worker = BookDetailWorker()
        worker?.requestBookDetail(id: request.id, completionHandler: { [weak self] (response) in
            guard let self = self else { return }
            switch response.result {
            case .success(let result):
                self.presenter?.presentBookDetail(response: result)
            case .failure(let error):
                print(error)
            }
        })
        
    }
}
