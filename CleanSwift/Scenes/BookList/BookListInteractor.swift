//
//  BookListInteractor.swift
//  CleanSwift
//
//  Created by 이기완 on 2020/06/29.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Alamofire

protocol BookListBusinessLogic {
    func requestBookList(request: BookList.FetchBooks.Request)
}

protocol BookListDataStore {
    var bookList: BookList.FetchBooks.Response? { get }
}

class BookListInteractor: BookListBusinessLogic, BookListDataStore {
    
    var bookList: BookList.FetchBooks.Response?
    
    var presenter: BookListPresentationLogic?
    var worker: BookListWorker?
    
    func requestBookList(request: BookList.FetchBooks.Request) {
        worker = BookListWorker()
        worker?.requestBookList(completionHandler: { [weak self] (response) in
            guard let self = self else { return }
            switch response.result {
            case .success(let result):
                debugPrint(response)
                self.bookList = result
                self.presenter?.presentBookList(response: result)
            case .failure(let error):
                print(error)
            }
        })
        
        
    }
}
